<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/flex
		http://www.springframework.org/schema/flex/spring-flex-1.0.xsd">

	<import resource="classpath:spring/application-context.xml"/>

	<!-- Application Message Bundle -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean> -->

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
	<context:component-scan base-package="com.poi.controller"/>

	<!--
		- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions.
	-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.servlet.PageNotFound">pageNotFound</prop>
				<prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
			</props>
		</property>
	</bean>

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="order" value="0"/>
    	<property name="viewClass">
	        <value>
	            org.springframework.web.servlet.view.tiles2.TilesView
	        </value>
	    </property>
	</bean>

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/tiles/tiles.xml</value>
	        </list>
	    </property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> 
			<list> 
				<ref bean="marshallingHttpMessageConverter" />
				<ref bean="jsonHttpMessageConverter" />
			</list> 
		</property>
	</bean>
	<bean id="marshallingHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> 
		<property name="marshaller" ref="jaxb2Marshaller" />
		<property name="unmarshaller" ref="jaxb2Marshaller" />
	</bean>

	<bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
	    		<value>com.poi.view.MarketDataView</value>
	    		<value>com.poi.view.MarketNews</value>
	    		<value>com.poi.view.RegisterUserView</value>
	    		<value>com.poi.view.SectorsView</value>
	    		<value>com.poi.view.AccountNumberView</value>
	    		<value>com.poi.view.HoldingsView</value>
	    		<value>com.poi.view.CompanyView</value>
	    		<value>com.poi.view.PortfolioConstraintsView</value>
	    		<value>com.poi.view.AccountView</value>
	    		<value>com.poi.view.SkiResortView</value>
			</list>
		</property>
	</bean>
	
	<bean id="jsonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
        	</map>
        </property>
    </bean>

	<!-- Helper for getting the currently authenticated user -->
    <bean id="securityHelper" class="com.poi.util.Security3Helper" />

	<bean id="loginController" class="com.poi.controller.LoginController">
		<property name="accountService" ref="accountService" />
	</bean>

	<bean id="viewController" class="com.poi.controller.ViewController">
		<property name="accountService" ref="accountService" />
	</bean>

	<bean id="marketDataController" class="com.poi.controller.MarketDataController">
		<property name="marketDataService" ref="marketDataService" />
	</bean>

	<bean id="cronController" class="com.poi.controller.CronController">
		<property name="eodCycleInvoker" ref="eodCycleInvoker" />
	</bean>

	<bean id="companyController" class="com.poi.controller.CompanyController">
		<property name="companyService" ref="companyService" />
	</bean>

	<bean id="portfolioController" class="com.poi.controller.PortfolioController">
		<property name="portfolioService" ref="portfolioService" />
	</bean>

	<bean id="snowReportController" class="com.poi.controller.SnowReportController">
		<property name="snowReportService" ref="snowReportService" />
	</bean>

</beans>